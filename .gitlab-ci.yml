stages:
  - lint
  - build

Lint backend:
  image: python:3.10.2-slim-bullseye
  variables:
    PRE_COMMIT_HOME: $CI_PROJECT_DIR/.cache/pre-commit
    PIP_CACHE_DIR: $CI_PROJECT_DIR/.pip_cache
  cache:
    paths:
      - $PRE_COMMIT_HOME
      - $PIP_CACHE_DIR
    key:
      files:
        - .pre-commit-config.yaml
  stage: lint
  before_script:
    - apt-get update && apt-get install -y git
    - pip install pre-commit==3.2.1
  script:
    - pre-commit run --hook-stage manual --all-files


Lint frontend:
  image: node:16.14.0-alpine
  variables:
    NPM_CONFIG_CACHE: $CI_PROJECT_DIR/.npm
  cache:
    paths:
      - $NPM_CONFIG_CACHE
    key:
      files:
        - package-lock.json
  stage: lint
  before_script:
    - cd frontend
    - npm ci
  script:
    - npm run lint


Build backend:
  image: docker:23.0.3
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE: $CI_REGISTRY_IMAGE-backend
  services:
    - docker:23.0.3-dind
  script:
    - docker run --rm --privileged tonistiigi/binfmt --install arm64
    - docker buildx create --name arm-builder --bootstrap --use
    - echo -n $CI_REGISTRY_PASSWORD | docker login --username $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker pull $IMAGE:latest || true
    - docker buildx build 
      --progress plain 
      --platform linux/arm64 
      --cache-from=$IMAGE:latest
      --pull
      --cache-from
      --tag $IMAGE:$CI_COMMIT_SHA 
      $CI_PROJECT_DIR/backend
